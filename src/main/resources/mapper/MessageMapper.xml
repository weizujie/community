<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.community.mapper.MessageMapper">

    <sql id="selectFields">
        id
        , from_id, to_id, conversation_id, content, status, create_time
    </sql>

    <sql id="insertFields">
        from_id
        , to_id, conversation_id, content, status, create_time
    </sql>

    <select id="selectConversations" resultType="com.community.entity.Message">
        SELECT
        <include refid="selectFields"/>
        FROM message WHERE id in (
        SELECT max(id)
        FROM message
        WHERE status != 2
        AND from_id != 1
        AND (from_id = #{userId} OR to_id = #{userId})
        GROUP BY conversation_id
        )
        ORDER BY id DESC
        LIMIT #{offset}, #{limit}
    </select>

    <select id="selectConversationCount" resultType="int">
        SELECT COUNT(m.maxid)
        FROM (
                 SELECT max(id) AS maxid
                 FROM message
                 WHERE status != 2
          AND from_id != 1
          AND (from_id = #{userId}
                    OR to_id = #{userId})
                 GROUP BY conversation_id
             ) AS m
    </select>

    <select id="selectLetters" resultType="com.community.entity.Message">
        SELECT
        <include refid="selectFields"/>
        FROM message
        WHERE status != 2
        AND from_id != 1
        AND conversation_id = #{conversationId}
        ORDER BY id DESC
        LIMIT #{offset}, #{limit}
    </select>

    <select id="selectLetterCount" resultType="int">
        SELECT COUNT(id)
        FROM message
        WHERE status != 2
        AND from_id != 1
        AND conversation_id = #{conversationId}
    </select>

    <select id="selectLetterUnreadCount" resultType="int">
        SELECT COUNT(id) FROM message
        WHERE status = 0
        AND from_id != 2
        AND to_id = #{userId}
        <if test="conversationId != null">
            AND conversation_id = #{conversationId}
        </if>
    </select>

    <insert id="insertMessage" parameterType="com.community.entity.Message" keyProperty="id">
        INSERT INTO message(<include refid="insertFields"/>)
        VALUES(#{fromId}, #{toId}, #{conversationId}, #{content}, #{status}, #{createTime})
    </insert>

    <update id="updateStatus">
        UPDATE message
        SET status = #{status}
        WHERE id IN
        <foreach collection="ids" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>

</mapper>